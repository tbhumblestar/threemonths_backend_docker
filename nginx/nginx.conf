#바꿔야할 도메인 개수 : 6개
user nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$request_uri" "$uri"'
                      '"$http_user_agent" "$http_x_forwarded_for"';    
    access_log  /var/log/nginx/access.log  main;
    sendfile on;
    keepalive_timeout 65;

    # nginx쓸 수도 있으니
    # upstream docker-web {
    #     server nginx:80;
    # }

    upstream django_docker {
        server django:8000;
    }

    server {
        listen 80;
        server_name threemonths.shop www.threemonths.shop;

        location ~ /.well-known/acme-challenge {
                allow all;
                root /usr/share/nginx/html;
                try_files $uri =404;
        }

        location / {
                return 301 https://$host$request_uri;
        }    
    }

    #인증서 첫 발급시 아래 server부분을 주석처리하고 docker-compose를 실행. 인증서 발급 이후로는 다시 살려둘 것
    server {
        listen 443 ssl;
        server_name threemonths.shop www.threemonths.shop;
        
        ssl_certificate /etc/letsencrypt/live/threemonths.shop/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/threemonths.shop/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf; # 보안 강화를 위한 옵션 추가
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;   # 보안 강화를 위한 옵션 추가

        location / {
            proxy_pass         http://django_docker;       # django_docker 컨테이너로 포워딩
            # proxy_pass         http://docker-web;       # docker-web 컨테이너로 포워딩
            proxy_redirect     off;                     # 서버 응답 헤더의 주소 변경 (불필요)
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
	    proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }
}
